import { Engine } from "tsparticles/engine";
import type { IAbsorberOptions } from "tsparticles/Plugins/Absorbers/Options/Interfaces/IAbsorberOptions";
import type { IEmitterOptions } from "tsparticles/Plugins/Emitters/Options/Interfaces/IEmitterOptions";
import type { IPolygonMaskOptions } from "tsparticles/Plugins/PolygonMask/Options/Interfaces/IPolygonMaskOptions";
import type { IOptions as ISlimOptions } from "tsparticles/Options/Interfaces/IOptions";
import type { RecursivePartial } from "tsparticles/Types";
declare const tsParticles: Engine;
declare const particlesJS: import("tsparticles/pjs").IParticlesJS, pJSDom: import("tsparticles/Core").Container[];
export * from "tsparticles/Core";
export * from "tsparticles/Core/Container";
export * from "tsparticles/Enums";
export * from "tsparticles/Plugins/Absorbers/Enums";
export * from "tsparticles/Plugins/Emitters/Enums";
export * from "tsparticles/Plugins/PolygonMask/Enums";
export { Engine, Engine as Main };
export * from "tsparticles/Utils";
export * from "tsparticles/Types";
export { particlesJS, pJSDom, tsParticles };
export declare type IOptions = ISlimOptions & IAbsorberOptions & IEmitterOptions & IPolygonMaskOptions;
export declare type ISourceOptions = RecursivePartial<IOptions>;
